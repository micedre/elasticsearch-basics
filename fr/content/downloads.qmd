---
title: "Télécharger les Notebooks"
---

## Notebooks Jupyter Interactifs

Téléchargez les sections pratiques sous forme de notebooks Jupyter interactifs pour exécuter les exemples sur votre propre machine.

### Prérequis

Avant d'utiliser ces notebooks, assurez-vous d'avoir :

1. Python 3.13+ installé
2. Les dépendances du projet installées via `uv sync`
3. Une instance Elasticsearch en cours d'exécution (voir [Premiers Pas](getting-started.qmd))

### Notebooks Disponibles

Tous les notebooks incluent :
- Des explications complètes et du texte en markdown
- Des exemples de code Python exécutables
- Des requêtes et opérations prêtes à exécuter

---

### 1. Premiers Pas

Apprenez à installer Elasticsearch, à vous connecter en utilisant le client Python et à vérifier votre configuration.

**Sujets couverts :**
- Options d'installation (Docker, Cloud, Local)
- Configuration du client Python
- Test des connexions
- Dépannage des problèmes courants

[Télécharger getting-started.ipynb](getting-started.ipynb){.btn .btn-primary download="getting-started.ipynb"}

---

### 2. Concepts et Architecture d'Elasticsearch

Comprenez comment Elasticsearch fonctionne en interne avec l'architecture distribuée et la scalabilité.

**Sujets couverts :**
- Documents, indices et shards
- Architecture de cluster et types de nœuds
- Recherche distribuée et routage
- L'index inversé
- Réplication et haute disponibilité
- Meilleures pratiques de scalabilité

[Télécharger concepts-architecture.ipynb](concepts-architecture.ipynb){.btn .btn-primary download="concepts-architecture.ipynb"}

---

### 3. Configuration des Index

Maîtrisez les mappings, les types de champs et l'analyse de texte pour optimiser votre expérience de recherche.

**Sujets couverts :**
- Mappings dynamiques vs explicites
- Types de champs (text, keyword, numeric, date)
- Mappings multi-champs
- Pipeline d'analyse de texte
- Analyseurs intégrés et personnalisés
- Tokenizers et filtres de tokens
- Stratégies de réindexation

[Télécharger index-configuration.ipynb](index-configuration.ipynb){.btn .btn-primary download="index-configuration.ipynb"}

---

### 4. Langages de Requête

Explorez le Query DSL d'Elasticsearch et les agrégations pour une recherche et des analyses puissantes.

**Sujets couverts :**
- Structure et bases du Query DSL
- Recherche plein texte (match, multi-match, phrase)
- Requêtes au niveau des termes (term, range, exists)
- Requêtes booléennes avec must/should/filter
- Tri et pagination
- Agrégations de métrique et de bucket
- Histogrammes de dates et agrégations imbriquées
- Introduction à ES|QL
- Conseils de performance

[Télécharger query-languages.ipynb](query-languages.ipynb){.btn .btn-primary download="query-languages.ipynb"}

---

### 5. Tableaux de Bord Kibana

Apprenez à visualiser et explorer vos données avec l'interface puissante de Kibana.

**Sujets couverts :**
- Configuration et installation de Kibana
- Exploration de données avec Discover
- Kibana Query Language (KQL)
- Création de visualisations (ligne, barre, camembert, métrique, tableau)
- Création de tableaux de bord interactifs
- Filtres et contrôles de tableau de bord
- Flux de travail Python + Kibana
- Lens et fonctionnalités avancées
- Exportation et partage

[Télécharger kibana-dashboards.ipynb](kibana-dashboards.ipynb){.btn .btn-primary download="kibana-dashboards.ipynb"}

---

## Télécharger Tous les Notebooks

:::{.callout-tip}
## Téléchargement Groupé
Vous pouvez télécharger tous les notebooks en une seule fois en clonant le dépôt ou en utilisant le répertoire rendu `_site/` après avoir exécuté `quarto render`.

```bash
# After rendering, notebooks are in the _site directory
quarto render
ls _site/*.ipynb
```
:::

---

## Comment Utiliser les Notebooks

### 1. Activer l'Environnement Virtuel

```bash
# From the project directory
source .venv/bin/activate  # Unix/macOS
# or
.venv\Scripts\activate     # Windows
```

### 2. Démarrer Jupyter

```bash
jupyter notebook
```

Cela ouvrira Jupyter dans votre navigateur.

### 3. Naviguer vers le Notebook Téléchargé

Ouvrez le fichier `.ipynb` téléchargé dans Jupyter.

### 4. Assurez-vous qu'Elasticsearch est en Cours d'Exécution

Avant d'exécuter les cellules, assurez-vous que votre instance Elasticsearch est en cours d'exécution :

```bash
# Check if Elasticsearch is responding
curl http://localhost:9200

# Or start with Docker
docker run -d --name elasticsearch -p 9200:9200 \
  -e "discovery.type=single-node" \
  -e "xpack.security.enabled=false" \
  docker.elastic.co/elasticsearch/elasticsearch:8.11.0
```

### 5. Exécuter les Cellules

Exécutez les cellules dans l'ordre en utilisant :
- `Shift + Enter` pour exécuter une cellule et passer à la suivante
- `Ctrl + Enter` pour exécuter une cellule et rester dessus
- `Cell > Run All` pour exécuter toutes les cellules

---

## Personnaliser les Exemples

Tous les exemples utilisent `eval: false` par défaut, ce qui signifie qu'ils ne s'exécuteront pas pendant le rendu. Dans les notebooks, vous pouvez :

1. **Modifier les paramètres de connexion** pour correspondre à votre instance Elasticsearch
2. **Ajuster les noms d'index** pour éviter les conflits
3. **Expérimenter avec les requêtes** et voir les résultats en temps réel
4. **Ajouter vos propres cellules de code** pour pratiquer

### Exemple : Personnaliser la Connexion

```python
# Default connection
es = Elasticsearch(['http://localhost:9200'])

# Custom connection (Elastic Cloud example)
es = Elasticsearch(
    cloud_id='your-deployment-id',
    basic_auth=('username', 'password')
)

# Custom connection (with TLS)
es = Elasticsearch(
    ['https://your-elasticsearch-host:9200'],
    basic_auth=('username', 'password'),
    ca_certs='/path/to/ca.crt'
)
```

---

## Conseils pour Apprendre

1. **Exécutez les exemples dans l'ordre** - Les exemples ultérieurs s'appuient sur les précédents
2. **Expérimentez librement** - Modifiez les requêtes et voyez ce qui se passe
3. **Vérifiez Elasticsearch** - Utilisez `curl` ou Kibana pour vérifier les changements
4. **Lisez les messages d'erreur** - Ils contiennent souvent des informations de débogage utiles
5. **Utilisez des index de test** - Créez des index dédiés pour la pratique

:::{.callout-warning}
## Sécurité des Données
Les notebooks démontrent des opérations de suppression. Utilisez toujours des données de test et des index lors de l'apprentissage. N'exécutez jamais ces exemples sur des données de production !
:::

---

## Dépannage

### Les Notebooks ne s'Ouvrent pas

Assurez-vous que Jupyter est installé :

```bash
uv sync  # Installs all dependencies including Jupyter
```

### Erreurs de Connexion

Vérifiez qu'Elasticsearch est en cours d'exécution et accessible :

```bash
curl http://localhost:9200
# Should return JSON with cluster information
```

### Erreurs d'Importation

Assurez-vous que l'environnement virtuel est activé et que les dépendances sont installées :

```bash
source .venv/bin/activate
uv sync
```

---

## Ressources Supplémentaires

- [Documentation du Client Python Elasticsearch](https://elasticsearch-py.readthedocs.io/)
- [Référence Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html)
- [Documentation Jupyter Notebook](https://jupyter-notebook.readthedocs.io/)

---

:::{.callout-tip}
## Retours et Questions
Si vous trouvez des problèmes avec les notebooks ou avez des suggestions, veuillez [ouvrir une issue](https://github.com) sur le dépôt du projet.
:::
